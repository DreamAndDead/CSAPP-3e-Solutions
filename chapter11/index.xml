<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Network Programming on CASPP 3e Solutions</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/</link><description>Recent content in Network Programming on CASPP 3e Solutions</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 26 Feb 2021 09:15:46 +0800</lastBuildDate><atom:link href="https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/index.xml" rel="self" type="application/rss+xml"/><item><title>11.6</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.6/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.6/</guid><description>A.
--- tiny.origin.c 2021-02-25 07:26:33.302592754 +0000 +++ tiny.6.c 2021-02-25 07:26:33.302592754 +0000 @@ -13,6 +13,8 @@ void clienterror(int fd, char *cause, char *errnum, char *shortmsg, char *longmsg); +void echo(int connfd); + int main(int argc, char **argv) { int listenfd, connfd; @@ -33,11 +35,24 @@ Getnameinfo((SA *) &amp;amp;clientaddr, clientlen, hostname, MAXLINE, port, MAXLINE, 0); printf(&amp;#34;Accepted connection from (%s, %s)\n&amp;#34;, hostname, port); - doit(connfd); //line:netp:tiny:doit + echo(connfd); Close(connfd); //line:netp:tiny:close } } +void echo(int connfd) { + size_t n; + char buf[MAXLINE]; + rio_t rio; + + Rio_readinitb(&amp;amp;rio, connfd); + while ((n = Rio_readlineb(&amp;amp;rio, buf, MAXLINE)) !</description></item><item><title>11.7</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.7/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.7/</guid><description>visit mdn to check all mime type
--- tiny.origin.c 2021-02-25 07:26:33.302592754 +0000 +++ tiny.7.c 2021-02-25 07:26:33.302592754 +0000 @@ -173,6 +173,8 @@ strcpy(filetype, &amp;#34;image/png&amp;#34;); else if (strstr(filename, &amp;#34;.jpg&amp;#34;)) strcpy(filetype, &amp;#34;image/jpeg&amp;#34;); + else if (strstr(filename, &amp;#34;.mpeg&amp;#34;)) + strcpy(filetype, &amp;#34;video/mpeg&amp;#34;); else strcpy(filetype, &amp;#34;text/plain&amp;#34;); } run server
(cd ./site/content/chapter11/code; make &amp;amp;&amp;amp; ./tiny.7 5000) browser visit
http://localhost:5000/ghost-in-shell.mpeg</description></item><item><title>11.8</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.8/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.8/</guid><description>--- tiny.origin.c 2021-02-25 07:26:33.302592754 +0000 +++ tiny.8.c 2021-02-25 07:26:33.302592754 +0000 @@ -12,6 +12,7 @@ void serve_dynamic(int fd, char *filename, char *cgiargs); void clienterror(int fd, char *cause, char *errnum, char *shortmsg, char *longmsg); +void sigchild_handler(int sig); int main(int argc, char **argv) { @@ -26,6 +27,9 @@ exit(1); } + if (Signal(SIGCHLD, sigchild_handler) == SIG_ERR) + unix_error(&amp;#34;signal child handler error&amp;#34;); + listenfd = Open_listenfd(argv[1]); while (1) { clientlen = sizeof(clientaddr); @@ -38,6 +42,15 @@ } } +void sigchild_handler(int sig) { + int old_errno = errno; + int status; + pid_t pid; + while ((pid = waitpid(-1, &amp;amp;status, WNOHANG)) &amp;gt; 0) { + } + errno = old_errno; +} + /* * doit - handle one HTTP request/response transaction */ @@ -196,7 +209,6 @@ Dup2(fd, STDOUT_FILENO); /* Redirect stdout to client */ //line:netp:servedynamic:dup2 Execve(filename, emptylist, environ); /* Run CGI program */ //line:netp:servedynamic:execve } - Wait(NULL); /* Parent waits for and reaps child */ //line:netp:servedynamic:wait } /*</description></item><item><title>11.9</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.9/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.9/</guid><description>--- tiny.origin.c 2021-02-25 07:26:33.302592754 +0000 +++ tiny.9.c 2021-02-25 07:26:33.302592754 +0000 @@ -152,12 +152,12 @@ printf(&amp;#34;Response headers:\n&amp;#34;); printf(&amp;#34;%s&amp;#34;, buf); - /* Send response body to client */ srcfd = Open(filename, O_RDONLY, 0); //line:netp:servestatic:open - srcp = Mmap(0, filesize, PROT_READ, MAP_PRIVATE, srcfd, 0);//line:netp:servestatic:mmap + srcp = (char*)Malloc(filesize); + Rio_readn(srcfd, srcp, filesize); Close(srcfd); //line:netp:servestatic:close Rio_writen(fd, srcp, filesize); //line:netp:servestatic:write - Munmap(srcp, filesize); //line:netp:servestatic:munmap + free(srcp); } /*</description></item><item><title>11.10</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.10/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.10/</guid><description>A.
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;Tiny Server&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form action=&amp;#34;/cgi-bin/form-adder&amp;#34; method=&amp;#34;GET&amp;#34;&amp;gt; &amp;lt;p&amp;gt;first number: &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;first&amp;#34;/&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;second number: &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;second&amp;#34;/&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Submit&amp;#34;/&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; browser should visit localhost:5000/cgi-bin/form-adder?first=222&amp;amp;second=333
B.
form-adder handle query string like first=ddd&amp;amp;second=dddd
/* * form-adder.c - a minimal CGI program that adds two numbers together */ #include &amp;#34;../csapp.h&amp;#34; int main(void) { char *buf, *p; char arg1[MAXLINE], arg2[MAXLINE], content[MAXLINE]; int n1=0, n2=0; /* Extract the two arguments */ if ((buf = getenv(&amp;#34;QUERY_STRING&amp;#34;)) !</description></item><item><title>11.11</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.11/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.11/</guid><description>from rfc2626 section 9.4 HEAD
The HEAD method is identical to GET except that the server MUST NOT return a message-body in the response.
tiny.c changes
--- tiny.origin.c 2021-02-25 07:26:33.302592754 +0000 +++ tiny.11.c 2021-02-25 07:26:33.302592754 +0000 @@ -7,9 +7,9 @@ void doit(int fd); void read_requesthdrs(rio_t *rp); int parse_uri(char *uri, char *filename, char *cgiargs); -void serve_static(int fd, char *filename, int filesize); +void serve_static(int fd, char *filename, int filesize, char *method); void get_filetype(char *filename, char *filetype); -void serve_dynamic(int fd, char *filename, char *cgiargs); +void serve_dynamic(int fd, char *filename, char *cgiargs, char *method); void clienterror(int fd, char *cause, char *errnum, char *shortmsg, char *longmsg); @@ -55,7 +55,7 @@ return; printf(&amp;#34;%s&amp;#34;, buf); sscanf(buf, &amp;#34;%s %s %s&amp;#34;, method, uri, version); //line:netp:doit:parserequest - if (strcasecmp(method, &amp;#34;GET&amp;#34;)) { //line:netp:doit:beginrequesterr + if (!</description></item><item><title>11.12</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.12/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.12/</guid><description>run server
(cd ./site/content/chapter11/code; make &amp;amp;&amp;amp; ./tiny.12 5000) visit http://localhost:5000/post-home.html and submit
POST method pass param by message-body behind Headers part. When we input 9 and 10 and submit, socket pass content
POST /cgi-bin/post-adder HTTP/1.1 Host: localhost:5000 User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:53.0) Gecko/20100101 Firefox/53.0 Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 Accept-Language: en-US,en;q=0.5 Accept-Encoding: gzip, deflate Content-Type: application/x-www-form-urlencoded Content-Length: 16 Referer: http://localhost:5000/post-home.html Cookie: _ga=GA1.1.1286836072.1494744693 Connection: keep-alive Upgrade-Insecure-Requests: 1 (CRLF here, message-body below) first=9&amp;amp;second=10 Content-Length marks the length of message-body.</description></item><item><title>11.13</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.13/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter11/11.13/</guid><description>--- tiny.origin.c 2021-02-25 07:26:33.302592754 +0000 +++ tiny.13.c 2021-02-25 07:26:33.302592754 +0000 @@ -13,6 +13,17 @@ void clienterror(int fd, char *cause, char *errnum, char *shortmsg, char *longmsg); +// improved rio written +void Im_rio_writen(int fd, void *usrbuf, size_t n) { + if (rio_writen(fd, usrbuf, n) != n) { + if (errno == EPIPE) + fprintf(stderr, &amp;#34;EPIPE error&amp;#34;); + + fprintf(stderr, &amp;#34;%s &amp;#34;, strerror(errno)); + unix_error(&amp;#34;client side has ended connection&amp;#34;); + } +} + int main(int argc, char **argv) { int listenfd, connfd; @@ -26,6 +37,9 @@ exit(1); } + if (Signal(SIGPIPE, SIG_IGN) == SIG_ERR) + unix_error(&amp;#34;mask signal pipe error&amp;#34;); + listenfd = Open_listenfd(argv[1]); while (1) { clientlen = sizeof(clientaddr); @@ -148,7 +162,7 @@ sprintf(buf, &amp;#34;%sConnection: close\r\n&amp;#34;, buf); sprintf(buf, &amp;#34;%sContent-length: %d\r\n&amp;#34;, buf, filesize); sprintf(buf, &amp;#34;%sContent-type: %s\r\n\r\n&amp;#34;, buf, filetype); - Rio_writen(fd, buf, strlen(buf)); //line:netp:servestatic:endserve + Im_rio_writen(fd, buf, strlen(buf)); //line:netp:servestatic:endserve printf(&amp;#34;Response headers:\n&amp;#34;); printf(&amp;#34;%s&amp;#34;, buf); @@ -156,7 +170,7 @@ srcfd = Open(filename, O_RDONLY, 0); //line:netp:servestatic:open srcp = Mmap(0, filesize, PROT_READ, MAP_PRIVATE, srcfd, 0);//line:netp:servestatic:mmap Close(srcfd); //line:netp:servestatic:close - Rio_writen(fd, srcp, filesize); //line:netp:servestatic:write + Im_rio_writen(fd, srcp, filesize); //line:netp:servestatic:write Munmap(srcp, filesize); //line:netp:servestatic:munmap } @@ -186,11 +200,13 @@ /* Return first part of HTTP response */ sprintf(buf, &amp;#34;HTTP/1.</description></item></channel></rss>