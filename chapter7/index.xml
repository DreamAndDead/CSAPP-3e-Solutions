<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linking on CASPP 3e Solutions</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/</link><description>Recent content in Linking on CASPP 3e Solutions</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 26 Feb 2021 09:15:46 +0800</lastBuildDate><atom:link href="https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/index.xml" rel="self" type="application/rss+xml"/><item><title>7.6</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.6/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.6/</guid><description>/* * swap.c */ extern int buf[]; int* bufp0 = &amp;amp;buf[0]; static int* bufp1; static void incr() { static int count=0; count++; } void swap() { int temp; incr(); bufp1 = &amp;amp;buf[1]; temp = *bufp0; *bufp0 = *bufp1; *bufp1 = temp; } in .symtab? type module section buf Yes external m .data bufp0 Yes global swap .data bufp1 Yes local swap .</description></item><item><title>7.7</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.7/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.7/</guid><description>/* * bar5.c */ double x; void f() { /*x = -0.0;*/ } delete line
x = -0.0;</description></item><item><title>7.8</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.8/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.8/</guid><description>A.
main.1
main.2
B.
unknown
unknown
C.
error
error</description></item><item><title>7.9</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.9/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.9/</guid><description>function main print 0x55 on my machine.
modify char main to unsigned int main here
/* * bar6.c */ #include &amp;lt;stdio.h&amp;gt; unsigned int main; void p2() { printf(&amp;#34;0x%x\n&amp;#34;, main); } /* * foo6.c */ void p2(void); void offset(void) { return; } int main(int argc, char* argv[]) { p2(); return 0; }
(cd ./site/content/chapter7/code/7.9; make &amp;amp;&amp;amp; ./main) output:
gcc foo6.c bar6.c -o main /usr/lib/gcc/x86_64-pc-linux-gnu/4.9.4/../../../../x86_64-pc-linux-gnu/bin/ld: Warning: alignment 1 of symbol `main' in /tmp/ccTBhRjm.</description></item><item><title>7.10</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.10/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.10/</guid><description>A.
gcc p.o libx.a B.
gcc p.o libx.a liby.a libx.a C.
gcc p.o libx.a liby.a libx.a libz.a</description></item><item><title>7.11</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.11/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.11/</guid><description>space for section .bss</description></item><item><title>7.12</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.12/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.12/</guid><description>A.
ADDR(s) = ADDR(.text) = 0x4004e0
ADDR(r.symbol) = ADDR(swap) = 0x4004f8
refaddr = ADDR(s) + r.offset = 0x4004ea
*refptr = (unsigned) (ADDR(r.symbol) + r.addend - refaddr) = 0xa
B.
ADDR(s) = ADDR(.text) = 0x4004d0
ADDR(r.symbol) = ADDR(swap) = 0x400500
refaddr = ADDR(s) + r.offset = 0x4004da
*refptr = (unsigned) (ADDR(r.symbol) + r.addend - refaddr) = 0x22</description></item><item><title>7.13</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.13/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter7/7.13/</guid><description>A.
libm.a path
whereis libm.a output:
libm: /usr/lib64/libm.a /usr/lib64/libm.so libm.a files
ar t /usr/lib64/libm.a output:
s_lib_version.o s_matherr.o s_signgam.o fclrexcpt.o fgetexcptflg.o fraiseexcpt.o fsetexcptflg.o ftestexcept.o fegetround.o fesetround.o fegetenv.o feholdexcpt.o fesetenv.o feupdateenv.o t_exp.o fedisblxcpt.o feenablxcpt.o fegetexcept.o powl_helper.o e_acos.o e_acosh.o e_asin.o e_atan2.o e_atanh.o .... similar way for libc.a
B.
compile code with -Og and -Og -g
/* * little.c */ int main(int argc, char* argv[]) { return 0; } (cd chapter7/code/7.</description></item></channel></rss>