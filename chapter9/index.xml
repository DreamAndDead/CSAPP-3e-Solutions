<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Virtual Memory on CASPP 3e Solutions</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/</link><description>Recent content in Virtual Memory on CASPP 3e Solutions</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 26 Feb 2021 09:15:46 +0800</lastBuildDate><atom:link href="https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/index.xml" rel="self" type="application/rss+xml"/><item><title>9.11</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.11/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.11/</guid><description>VA: 0x027c
A.
13 12 11 10 9 8 7 6 5 4 3 2 1 0 +--|--|--|--|--|--|--|--|--|--|--|--|--|--+ | 0| 0| 0| 0| 1| 0| 0| 1| 1| 1| 1| 1| 0| 0| +--|--|--|--|--|--|--|--|--|--|--|--|--|--+ B.
param value VPN 0x09 TLBI 0x01 TLBT 0x02 hit? No page falut? No PPN 0x17 C.</description></item><item><title>9.12</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.12/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.12/</guid><description>VA: 0x03a9
A.
13 12 11 10 9 8 7 6 5 4 3 2 1 0 +--|--|--|--|--|--|--|--|--|--|--|--|--|--+ | 0| 0| 0| 0| 1| 1| 1| 0| 1| 0| 1| 0| 0| 1| +--|--|--|--|--|--|--|--|--|--|--|--|--|--+ B.
param value VPN 0x0E TLBI 0x02 TLBT 0x03 hit? No page falut? No PPN 0x11 C.</description></item><item><title>9.13</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.13/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.13/</guid><description>VA: 0x0040
A.
13 12 11 10 9 8 7 6 5 4 3 2 1 0 +--|--|--|--|--|--|--|--|--|--|--|--|--|--+ | 0| 0| 0| 0| 0| 0| 0| 1| 0| 0| 0| 0| 0| 0| +--|--|--|--|--|--|--|--|--|--|--|--|--|--+ B.
param value VPN 0x01 TLBI 0x01 TLBT 0x00 hit? No page falut? Yes</description></item><item><title>9.14</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.14/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.14/</guid><description>/* * 9.14.c */ #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;assert.h&amp;gt;#include &amp;#34;vm/csapp.h&amp;#34; void test(char* filename, char* content) { int fd; char buf[20]; fd = Open(filename, O_RDONLY, 0); Read(fd, buf, strlen(content)); assert( !strncmp(buf, content, strlen(content)) ); } int touch(char* filename, char* content) { int fd; umask(DEF_UMASK); fd = Open(filename, O_WRONLY|O_CREAT|O_TRUNC, DEF_MODE); Write(fd, content, strlen(content)); Close(fd); } int main(int argc, char* argv[]) { touch(&amp;#34;hello.txt&amp;#34;, &amp;#34;Hello, world!&amp;#34;); test(&amp;#34;hello.txt&amp;#34;, &amp;#34;Hello, world!&amp;#34;); struct stat stat; int fd; char* bufp; size_t size; fd = Open(&amp;#34;hello.</description></item><item><title>9.15</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.15/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.15/</guid><description> malloc size header malloc(3) 8 0x9 malloc(11) 16 0x11 malloc(20) 24 0x19 malloc(21) 24 0x19</description></item><item><title>9.16</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.16/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.16/</guid><description> alignment allocated block spare block min block size word Header &amp;amp; Footer Header &amp;amp; Footer 16 word Header Header &amp;amp; Footer 16 double word Header &amp;amp; Footer Header &amp;amp; Footer 16 double word Header Header &amp;amp; Footer 16</description></item><item><title>9.17</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.17/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.17/</guid><description>complete code in ./site/content/chapter9/code/vm/mm.9.17.c
--- mm.c 2021-02-25 07:26:33.315926002 +0000 +++ mm.9.17.c 2021-02-25 07:26:33.315926002 +0000 @@ -41,6 +41,7 @@ /* Global variables */ static char *heap_listp = 0; /* Pointer to first block */ +static char *rover; /* Next fit rover */ /* Function prototypes for internal helper routines */ static void *extend_heap(size_t words); @@ -69,6 +70,7 @@ heap_listp += (2*WSIZE); //line:vm:mm:endinit /* $end mminit */ + rover = heap_listp; /* $begin mminit */ /* Extend the empty heap with a free block of CHUNKSIZE bytes */ @@ -177,6 +179,10 @@ bp = PREV_BLKP(bp); } /* $end mmfree */ + /* Make sure the rover isn&amp;#39;t pointing into the free block */ + /* that we just coalesced */ + if ((rover &amp;gt; (char *)bp) &amp;amp;&amp;amp; (rover &amp;lt; NEXT_BLKP(bp))) + rover = bp; /* $begin mmfree */ return bp; } @@ -290,16 +296,20 @@ { /* $end mmfirstfit */ - /* $begin mmfirstfit */ - /* First-fit search */ - void *bp; - - for (bp = heap_listp; GET_SIZE(HDRP(bp)) &amp;gt; 0; bp = NEXT_BLKP(bp)) { - if (!</description></item><item><title>9.18</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.18/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.18/</guid><description>complete code in ./site/content/chapter9/code/vm/mm.9.18.c
--- mm.c 2021-02-25 07:26:33.315926002 +0000 +++ mm.9.18.c 2021-02-25 07:26:33.315926002 +0000 @@ -20,7 +20,7 @@ #define MAX(x, y) ((x) &amp;gt; (y)? (x) : (y)) /* Pack a size and allocated bit into a word */ -#define PACK(size, alloc) ((size) | (alloc)) //line:vm:mm:pack +#define PACK(size, alloc, prev_alloc) ((size) | (alloc) | (prev_alloc &amp;lt;&amp;lt; 1)) //line:vm:mm:pack /* Read and write a word at address p */ #define GET(p) (*(unsigned int *)(p)) //line:vm:mm:get @@ -29,6 +29,7 @@ /* Read the size and allocated fields from address p */ #define GET_SIZE(p) (GET(p) &amp;amp; ~0x7) //line:vm:mm:getsize #define GET_ALLOC(p) (GET(p) &amp;amp; 0x1) //line:vm:mm:getalloc +#define GET_PREV_ALLOC(p) ((GET(p) &amp;gt;&amp;gt; 1) &amp;amp; 0x1) /* Given block ptr bp, compute address of its header and footer */ #define HDRP(bp) ((char *)(bp) - WSIZE) //line:vm:mm:hdrp @@ -63,9 +64,9 @@ if ((heap_listp = mem_sbrk(4*WSIZE)) == (void *)-1) //line:vm:mm:begininit return -1; PUT(heap_listp, 0); /* Alignment padding */ - PUT(heap_listp + (1*WSIZE), PACK(DSIZE, 1)); /* Prologue header */ - PUT(heap_listp + (2*WSIZE), PACK(DSIZE, 1)); /* Prologue footer */ - PUT(heap_listp + (3*WSIZE), PACK(0, 1)); /* Epilogue header */ + PUT(heap_listp + (1*WSIZE), PACK(DSIZE, 1, 1)); /* Prologue header */ + PUT(heap_listp + (2*WSIZE), PACK(DSIZE, 1, 1)); /* Prologue footer */ + PUT(heap_listp + (3*WSIZE), PACK(0, 1, 1)); /* Epilogue header */ heap_listp += (2*WSIZE); //line:vm:mm:endinit /* $end mminit */ @@ -98,10 +99,10 @@ return NULL; /* Adjust block size to include overhead and alignment reqs.</description></item><item><title>9.19</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.19/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.19/</guid><description>a: Right. 2^(k+1) block size for (2^k)+1 allocation request
b: wrong.
c: wrong. LIFO is also fast.
d: wrong. almost every strategy has external fragmentation problem.
a: wrong. first fit should be fast in this condition
b: wrong. should be order by block size
c: wrong. min spare size not max
d: Right.
b
ref 9.10.3</description></item><item><title>9.20</title><link>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.20/</link><pubDate>Fri, 26 Feb 2021 09:15:46 +0800</pubDate><guid>https://dreamanddead.github.io/CSAPP-3e-Solutions/chapter9/9.20/</guid><description>using malloc lib code from csapp site
implicit idle list allocated block with header &amp;amp; footer idle block with header &amp;amp; footer no GC first fit strategy another modification to malloc lib file
mm.h
--- ../vm/mm.h 2021-02-25 07:26:33.315926002 +0000 +++ mm.h 2021-02-25 07:26:33.315926002 +0000 @@ -5,6 +5,9 @@ extern void mm_free (void *ptr); /* $end mallocinterface */ +#define malloc(size) mm_malloc(size) +#define free(ptr) mm_free(ptr) + extern void *mm_realloc(void *ptr, size_t size); extern void *mm_calloc (size_t nmemb, size_t size); extern void mm_checkheap(int verbose); memlib.</description></item></channel></rss>